apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'jacoco'

def _String = "String"
def _string = "string"
def APP_NAME = "app_name"
def NY_TIMES_API_KEY_NAME = "NYT_API_KEY"
def NY_TIMES_API_KEY_DEV = $/"U4tJnG43prjVeuWBRsVFnNYaofhMa2nt"/$
def NY_TIMES_API_KEY_PROD = $/"NwOZOLuAeAGH70Wm5q3oGno550zqNags"/$

jacoco {
    toolVersion = '0.8.5'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.sembozdemir.nytimesdemo"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }

        release {
            keyAlias 'android'
            keyPassword 'android'
            storeFile file('release.keystore')
            storePassword 'android'
        }
    }
    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
            applicationIdSuffix '.dev'
            resValue _string, APP_NAME, "NYTimes Dev"
            buildConfigField _String, NY_TIMES_API_KEY_NAME, NY_TIMES_API_KEY_DEV
        }
        prod {
            dimension "default"
            resValue _string, APP_NAME, "NyTimes"
            buildConfigField _String, NY_TIMES_API_KEY_NAME, NY_TIMES_API_KEY_PROD
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            zipAlignEnabled true
        }
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0"

    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.mockito:mockito-inline:2.8.47'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation('org.robolectric:robolectric:4.3') {
        exclude(group: 'com.google.auto.service', module: 'auto-service')
    }
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03'
    implementation 'androidx.browser:browser:1.2.0'

    implementation 'com.google.android.material:material:1.2.0-alpha03'

    implementation 'com.google.dagger:dagger-android:2.22.1'
    implementation 'com.google.dagger:dagger-android-support:2.22.1'
    kapt 'com.google.dagger:dagger-compiler:2.22.1'
    kapt 'com.google.dagger:dagger-android-processor:2.22.1'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'io.coil-kt:coil:0.6.1'

    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation "com.squareup.retrofit2:converter-moshi:2.6.1"
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.8.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [ '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*' ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
